{"version":3,"sources":["services/Api.js","components/Searchbar/Searchbar.jsx","components/common/Modal/Modal.jsx","components/ImageGallery/ImageGallery.jsx","components/Button/Button.jsx","components/common/ErrorMsg/ErrorMsg.jsx","components/common/Loader/Loader.jsx","components/App/App.jsx","index.js"],"names":["BASE_URL","API_KEY","fetchImg","newImg","a","newPage","fetch","res","ok","json","Promise","reject","Error","statusText","Searchbar","input","useState","searchImg","setSearchImg","className","onSubmit","e","preventDefault","type","value","onChange","target","toLowerCase","autoComplete","autoFocus","placeholder","modalRootRef","document","querySelector","Modal","onClosesModal","largeImageURL","useEffect","handleEsc","code","window","addEventListener","removeEventListener","createPortal","onClick","currentTarget","src","alt","ImageGallery","images","onClickModal","map","webformatURL","id","Button","hendleOnClick","ErrorMsg","message","LoaderB","color","height","width","timeout","class","App","img","setImg","imgLarge","setImgLarge","setImages","error","setError","page","setPage","isLoading","setIsLoading","isModalOpen","setIsModalOpen","getImages","console","log","hits","prevImg","Loader","length","prevPage","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.39b9d0fb.chunk.js","sourcesContent":["const BASE_URL = \"https://pixabay.com/api/\";\nconst API_KEY = \"24479204-21740ca2d7de34b5e441c6983\";\n\nconst fetchImg = async (newImg, newPage = 1) => {\n  const res = await fetch(\n    `${BASE_URL}?key=${API_KEY}&q=${newImg}&page=${newPage}&image_type=photo&orientation=horizontal&per_page=12`\n  );\n\n  return res.ok ? res.json() : Promise.reject(new Error(res.statusText));\n};\n\nexport { fetchImg };\n","import { useState } from \"react\";\n\nconst Searchbar = ({ input }) => {\n  const [searchImg, setSearchImg] = useState(\"\");\n\n  const handleChange = (e) => {\n    setSearchImg(e.target.value.toLowerCase());\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    input(searchImg);\n  };\n  return (\n    <div>\n      <header className=\"searchbar\">\n        <form className=\"form\" onSubmit={handleSubmit}>\n          <button type=\"submit\" className=\"button\">\n            <span className=\"button-label\">Search</span>\n          </button>\n\n          <input\n            className=\"input\"\n            type=\"text\"\n            value={searchImg}\n            onChange={handleChange}\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n          />\n        </form>\n      </header>\n    </div>\n  );\n};\n\nexport default Searchbar;\n","import { createPortal } from \"react-dom\";\nimport { useEffect } from \"react\";\n\nconst modalRootRef = document.querySelector(\"#modal-root\");\n\nconst Modal = ({ onClosesModal, largeImageURL }) => {\n  useEffect(() => {\n    const handleEsc = (e) => {\n      if (e.code === \"Escape\") {\n        onClosesModal();\n      }\n    };\n\n    window.addEventListener(\"keydown\", handleEsc);\n    return () => {\n      window.removeEventListener(\"keydown\", handleEsc);\n    };\n  }, [onClosesModal]);\n\n  const handleBackdropClick = (e) => {\n    if (e.target === e.currentTarget) {\n      onClosesModal();\n    }\n  };\n\n  return createPortal(\n    <div className=\"overlay\" onClick={handleBackdropClick}>\n      <div className=\"modal\">\n        <img src={largeImageURL} alt=\"\" onClick={onClosesModal} />\n      </div>\n    </div>,\n    modalRootRef\n  );\n};\n\nexport default Modal;\n","import React from \"react\";\nimport Modal from \"../common/Modal/Modal\";\n\nconst ImageGallery = ({ images, onClickModal }) => {\n  return (\n    <div>\n      <ul className=\"gallery\">\n        {images.map(({ webformatURL, id, largeImageURL }) => (\n          <li key={id}>\n            <img\n              src={webformatURL}\n              alt=\"Foto\"\n              onClick={() => onClickModal(largeImageURL)}\n            />\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default ImageGallery;\n","const Button = ({ hendleOnClick }) => {\n  return (\n    <div>\n      <button\n        type=\"button \"\n        onClick={hendleOnClick}\n        className=\"button load-btn\"\n      >\n        Load more\n      </button>\n    </div>\n  );\n};\n\nexport default Button;\n","import PropTypes from \"prop-types\";\n// import s from \"./ErrorMsg.module.css\";\n\nconst ErrorMsg = ({ message = \"\" }) => {\n  return <p>{message || \"Something went wrong\"}</p>;\n};\n\nErrorMsg.propTypes = {\n  message: PropTypes.string,\n};\n\nexport default ErrorMsg;\n","import Loader from \"react-loader-spinner\";\n\nconst LoaderB = () => {\n  return (\n    <Loader\n      type=\"Puff\"\n      color=\"#00BFFF\"\n      height={100}\n      width={100}\n      timeout={3000}\n      class=\"lod\" //3 secs\n    />\n  );\n};\nexport default LoaderB;\n","import { Component } from \"react\";\nimport { useState, useEffect } from \"react\";\n\nimport { fetchImg } from \"../../services/Api\";\nimport Searchbar from \"../Searchbar/Searchbar\";\nimport ImageGallery from \"../ImageGallery/ImageGallery\";\nimport Button from \"../Button/Button\";\nimport Modal from \"../common/Modal/Modal\";\nimport ErrorMsg from \"../common/ErrorMsg/ErrorMsg\";\n\nimport LoaderB from \"../common/Loader/Loader\";\n\nconst App = () => {\n  const [img, setImg] = useState(null);\n  const [imgLarge, setImgLarge] = useState(\"\");\n  const [images, setImages] = useState([]);\n  const [error, setError] = useState(null);\n  const [page, setPage] = useState(1);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  useEffect(() => {\n    if (img === null) return;\n\n    const getImages = async () => {\n      setIsLoading(true);\n      setError(null);\n      console.log(fetchImg);\n      try {\n        const { hits } = await fetchImg(img, page);\n        setImages((prevImg) => [...prevImg, ...hits]);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getImages();\n  }, [img, page]);\n\n  const handleSubmit = (searchImg) => {\n    if (searchImg === img) return;\n\n    setImg(searchImg);\n    setImages([]);\n    setPage(1);\n  };\n\n  const onLoadMore = () => {\n    setPage((prevPage) => prevPage + 1);\n  };\n\n  const onClickModal = (largeImageURL) => {\n    setIsModalOpen(true);\n    setImgLarge(largeImageURL);\n  };\n\n  const onClosesModal = () => {\n    setIsModalOpen(false);\n    setImgLarge(\"\");\n  };\n  return (\n    <>\n      <Searchbar input={handleSubmit} />\n\n      {error && <ErrorMsg message={error} />}\n      <ImageGallery\n        images={images}\n        onClickModal={onClickModal}\n        isModalOpen={isModalOpen}\n      />\n      {isLoading && <LoaderB />}\n      {images.length > 0 && <Button hendleOnClick={onLoadMore} />}\n      {isModalOpen && (\n        <Modal largeImageURL={imgLarge} onClosesModal={onClosesModal} />\n      )}\n    </>\n  );\n};\n\n// componentDidUpdate(prevProps, prevState) {\n//     const { img, page } = this.state;\n\n//     if (prevState.img !== img || prevState.page !== page) {\n//       this.getImages(img, page);\n//     }\n//   }\n// }\n// class App extends Component {\n//   state = {\n//     img: \"\",\n//     imgLarge: \"\",\n//     images: [],\n\n//     error: null,\n//     page: 1,\n//     isLoading: false,\n//     isModalOpen: false,\n//   };\n\n// getImages = async (img, page) => {\n//   this.setState({\n//     isLoading: true,\n//     error: null,\n//   });\n//   try {\n//     const { hits } = await fetchImg(img, page);\n//     this.setState((prev) => ({\n//       images: [...prev.images, ...hits],\n//     }));\n//   } catch (error) {\n//     this.setState({ error: error.message });\n//   } finally {\n//     this.setState({ isLoading: false });\n//   }\n// };\n\n// handleSubmit = (searchImg) => {\n//   if (searchImg === this.state.img) return;\n//   this.setState((prev) => ({\n//     img: searchImg,\n//     images: [],\n//     page: 1,\n//   }));\n// };\n\n// onLoadMore = () => {\n//   this.setState((prev) => ({\n//     page: prev.page + 1,\n//   }));\n// };\n\n// onClickModal = (largeImageURL) => {\n//   this.setState({\n//     isModalOpen: true,\n//     imgLarge: largeImageURL,\n//   });\n// };\n\n// onClosesModal = () => {\n//   this.setState({\n//     isModalOpen: false,\n//     imgLarge: \"\",\n//   });\n// };\n\n//   render() {\n//     const { images, imgLarge, isModalOpen, isLoading, error } = this.state;\n\n//   }\n// }\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}